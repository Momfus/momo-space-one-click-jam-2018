<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Atributos

prueba_mostrar_informacion = false;  // Muestra los numeros de planetas y otra información sobre la misma

// Se guarda el número del planeta inicial (para señalar a futuros posibles cambios)

prueba_planeta_inicial_id = noone;
prueba_planeta_inicial_nro = 0;
prueba_planeta_inicial_ang_ini = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cambiar angulo de ubicación incial en planeta inicial

var menu_local_actual = 2,
    mi_input_string,
    mi_input_int;

// Se solicita al jugador que indique que desea modificar y se decide que hacer a partir de ahí
mi_input_string = get_string("&lt;&lt;MODO PRUEBA: Planeta - Cambiar ángulo de ubicación inicial en planeta inicial&gt;&gt;#" +
                                + "El planeta inicial actual es: " + string(prueba_planeta_inicial_nro) + "#"
                                + "El angulo inicial del jugador ahí es: " + string(prueba_planeta_inicial_ang_ini) + "# #"
                                + "Introduce un valor entre 0 y 360# #"
                                + "'Salir' o nada = volver al menú anterior#", 
                            "");
                            
mi_input_int = metodo_prueba_recibir_input(mi_input_string);

// En el caso que no se devolvió la cadena "error" se elige la opción correspondiente, sino se manda el mensaje correspondiente
if not ( is_string(mi_input_int) ){

    if ( mi_input_int != noone ){ 
    
        // Se controla que el valor ingresado este en el margen señalado, sino carga el error correspondient
        if( mi_input_int &gt; 360 or mi_input_int &lt; 0){

            metodo_prueba_menu_error( 4, menu_local_actual );
        
        }
        else{
               
            with( experto_nivel ){ metodo_set_planeta_angulo_inicial(mi_input_int); }
            prueba_planeta_inicial_ang_ini = mi_input_int;
            
            show_message("El ángulo del jugador en el planeta inicial es " + string( mi_input_int ) );
            with(experto_prueba ){ event_user(6); } // Se vuelve al menú anterior  
        
        }
     
    }
    else{ with(experto_prueba ){ event_user(6); } } // En el caso de haber escrito "salir" o nada

}
else{ 

    metodo_prueba_menu_error( 0, menu_local_actual );

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cambiar planeta inicial

var menu_local_actual = 1,
    mi_input_string,
    mi_input_int;

// Se solicita al jugador que indique que desea modificar y se decide que hacer a partir de ahí
mi_input_string = get_string("&lt;&lt;MODO PRUEBA: Planeta - Cambiar planeta inicial&gt;&gt;#" +
                                + "El planeta inicial actual es: " + string(prueba_planeta_inicial_nro) + "# #"
                                + "Introduce un número de planeta válido# #"
                                + "'Salir' o nada = volver al menú anterior#", 
                            "");
                            
mi_input_int = metodo_prueba_recibir_input(mi_input_string);

// En el caso que no se devolvió la cadena "error" se elige la opción correspondiente, sino se manda el mensaje correspondiente
if not ( is_string(mi_input_int) ){

   if ( mi_input_int != noone ){ 
   
        // Si el numero ingresado era de un planeta que ya era inicial, se comunica y vuelve a preguntar por el numero, sino hace el cambio. 
        if( prueba_planeta_inicial_id.planeta_numero == mi_input_int){

            metodo_prueba_menu_error( 2, menu_local_actual );
        
        }
        else{
            
            var pta_id = metodo_get_planeta(mi_input_int);

            // Si el planeta existe, se señala como inicial y se saca el que estaba. Sino, se lanza mensaje de error
            if( pta_id != noone ){
        
                // Se verifica que el planeta obtenido sea de tipo "ob_planeta_normal" (que son los únicos que pueden ser inicial), caso contrario lanza error
                if( pta_id.object_index != ob_planeta_normal  ){
                
                    metodo_prueba_menu_error( 1, menu_local_actual );
                
                }     
                else{
                       
                    metodo_prueba_cambiar_planeta_inicio( prueba_planeta_inicial_id, pta_id );
                    prueba_planeta_inicial_nro = mi_input_int;
                    prueba_planeta_inicial_id = pta_id;
                      
                    show_message("El planeta numero " + string( prueba_planeta_inicial_nro ) + " es ahora el inicial del nivel" );
                    with(experto_prueba ){ event_user(6); } // Se vuelve al menúa anterior  
                    
                }
                  
            
            }
            else{ metodo_prueba_menu_error( 3, menu_local_actual );  }
            
        
        }
   
   }
   else{ with(experto_prueba ){ event_user(6); } } // En el caso de haber escrito "salir" o nada

}
else{

    metodo_prueba_menu_error( 0, menu_local_actual );

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mostrar información visual de planetas

prueba_mostrar_informacion = !prueba_mostrar_informacion; 

global.prueba_cartel = false;


if( prueba_mostrar_informacion == true ){ show_message("Información visual planetas activado"); }
else{ show_message("Información visual planetas desactivado"); }

with(experto_prueba){ event_user(6); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mostrar información visual

if( prueba_mostrar_informacion == true ){

    with( parent_planeta ){
    
        var planeta_string_info = "";
        
        draw_set_halign(fa_center);
        draw_set_valign(fa_middle);
        draw_set_colour(c_fuchsia);
        
        switch( object_index ){
        
            // Planeta Normal
            case ob_planeta_normal:{
            
                var planeta_string_inicial = "";
                if( planeta_normal_inicio == true ){ planeta_string_inicial = "&lt;Inicial&gt;#Ang.Ini: " + string(experto_nivel.nivel_planeta_inicio_angulo); }
            
                planeta_string_info =  "&lt;&lt; Nro: " + string(planeta_numero) + " &gt;&gt;# #"
                                        + "Radio: " + string( planeta_radio ) + "#"
                                        + string( planeta_string_inicial );
                                        
                break;
                
            }
            
            // Otros
            default:{
                
                planeta_string_info =  "&lt;&lt; Nro: " + string(planeta_numero) + " &gt;&gt;# #"
                                        + "Radio: " + string( planeta_radio );
            
                break;
            
            }
    
    
                                
        }
        
        
        draw_text( x, y, planeta_string_info); // Texto informativo
        
        // Grados en cada punta
        draw_set_colour(c_aqua);
        draw_text( x + planeta_radio, y, "0°" ); 
        draw_text( x , y + planeta_radio, "90°" ); 
        draw_text( x - planeta_radio, y , "180°" );
        draw_text( x, y - planeta_radio, "270°" );
        
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
